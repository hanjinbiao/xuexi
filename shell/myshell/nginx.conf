
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}

stream {

	upstream sshs {
		server 192.168.2.100:22;
		server 192.168.2.200:22;
	}
	
	server {
		listen 12345;
		proxy_pass sshs;
	
	}
}

http {
   include       mime.types;
   default_type  application/octet-stream;
	#默认的访问日志
   #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
   #                  '$status $body_bytes_sent "$http_referer" '
   #                  '"$http_user_agent" "$http_x_forwarded_for"';

   #access_log  logs/access.log  main;

   sendfile        on;
   #tcp_nopush     on;

   #keepalive_timeout  0;
   keepalive_timeout  65;

   #gzip  on;
   #upstream web_servers {
	#	ip_hash;
	#	server 192.168.2.100 weight=1 max_fails=2 fail_timeout=20;
	#	server 192.168.2.200 weight=1 max_fails=2 fail_timeout=10;
	#}

   server {
       listen       80;
       server_name  www.a.com;
		#根据浏览器的属性来决定可以浏览的页面
		#rewrite ^/(.*)$ http://www.tmooc.cn/$1;
		#if ($http_user_agent ~* firefox) {
		#	rewrite ^/(.*) /firefox/$1;
		#}
		#if ($http_user_agent ~* elinks) {
		#	rewrite ^/(.*) /curl/$1;
		#}
       #charset koi8-r;
		#设置访问的口令，需要http_tools进行设置
		#auth_basic "Please Input You UserName&&Password:";
		#auth_basic_user_file "/usr/local/nginx/pass";
       #access_log  logs/host.access.log  main;
		charset utf-8;
       location / {
			#代理配置
	#		proxy_pass http://web_servers;

     		root   html;
      	     index  index.html index.htm;
			#重写地址 并临时修改地址栏
			#rewrite /a.html /b.html redirect;
       }

       error_page  404  401          /40x.html;

       # redirect server error pages to the static page /50x.html
       #
       error_page   500 502 503 504  /50x.html;
       location = /50x.html {
           root   html;
       }

       # proxy the PHP scripts to Apache listening on 127.0.0.1:80
       #
       #location ~ \.php$ {
       #    proxy_pass   http://127.0.0.1;
       #}

       # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
       # 匹配动态的页面，以PHP结尾的，交给php-ftp执行
       location ~ \.php$ {
           root           html;
           fastcgi_pass   127.0.0.1:9000;
           fastcgi_index  index.php;
			#文件有错误，需要注释掉，使用include 引用fastcgi.conf配置
           #fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
           include        fastcgi.conf;
       }

       # deny access to .htaccess files, if Apache's document root
       # concurs with nginx's one
       #
       #location ~ /\.ht {
       #    deny  all;
       #}
   }

   # another virtual host using mix of IP-, name-, and port-based configuration
   #
   server {
       listen       8080;
       #listen       somename:8080;
       server_name  www.b.com;

       location / {
           root   /var/www/html;
           index  index.html index.htm;
       }
   }


   # HTTPS server
   #
   server {
       listen       443 ssl;
       server_name  www.c.com;

       ssl_certificate      cert.pem;
       ssl_certificate_key  cert.key;

       ssl_session_cache    shared:SSL:1m;
       ssl_session_timeout  5m;

       ssl_ciphers  HIGH:!aNULL:!MD5;
       ssl_prefer_server_ciphers  on;

       location / {
           root   web;
           index  index.html index.htm;
       }
   }

}
